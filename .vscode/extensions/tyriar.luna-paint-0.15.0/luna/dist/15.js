"use strict";(self.webpackChunkluna=self.webpackChunkluna||[]).push([[15],{59:(e,t,r)=>{r.r(t),r.d(t,{parseChunk:()=>o});var n=r(6),a=r(47);function o(e,t,r){(0,n.assertChunkDataLengthGte)(e,r,6);const o=r.offset+4+4,s=o+r.dataLength;let i=o;const c=new TextDecoder("latin1");let d;d=(0,a.readText)(e,r,c,79,i,s,!0),i+=d.bytesRead;const h=d.text;return d=(0,a.readText)(e,r,c,void 0,i,s,!1),i+=d.bytesRead,{type:"tEXt",keyword:h,text:d.text}}},47:(e,t,r)=>{r.r(t),r.d(t,{readText:()=>o});var n=r(25),a=r(6);function o(e,t,r,o,s,i,c,d){const h=[];let u=0,f=0;for(;(void 0===o||f<o)&&(c||s!==i);f++){try{u=e.view.getUint8(s)}catch(e){if(e instanceof Error&&"Offset is outside the bounds of the DataView"===e.message)throw(0,a.createChunkDecodeWarning)(t,"EOF while reading text",s);throw e}if(!d&&0===u)break;s++,h.push(u)}if(c&&0!==e.view.getUint8(s))throw(0,a.createChunkDecodeWarning)(t,"No null character after text",s);let l=new Uint8Array(h);if(d){const e=new n.Inflate;if(e.push(l),e.err)throw(0,a.createChunkDecodeWarning)(t,`Inflate error: ${e.msg}`,s);l=e.result}return{text:r?r.decode(l):String.fromCharCode(...h),bytesRead:f+1}}}}]);